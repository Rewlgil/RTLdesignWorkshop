/* Generated by Yosys 0.52 (git sha1 fee39a3284c90249e1d9684cf6944ffbbcbb8f90) */

module ref9(clk, reset, n, t, n_best, t_best);
  wire [3:0] _00_;
  wire [1:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire [7:0] _06_;
  wire [7:0] _07_;
  wire [7:0] _08_;
  wire [7:0] _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  input clk;
  wire clk;
  input [1:0] n;
  wire [1:0] n;
  output [1:0] n_best;
  wire [1:0] n_best;
  reg [1:0] n_best_d1;
  input reset;
  wire reset;
  input [7:0] t;
  wire [7:0] t;
  output [7:0] t_best;
  wire [7:0] t_best;
  reg [7:0] t_best_d1;
  always @(posedge clk)
    if (reset) t_best_d1[0] <= #1 1'h1;
    else t_best_d1[0] <= #1 t_best[0];
  always @(posedge clk)
    if (reset) t_best_d1[1] <= #1 1'h1;
    else t_best_d1[1] <= #1 t_best[1];
  always @(posedge clk)
    if (reset) t_best_d1[2] <= #1 1'h1;
    else t_best_d1[2] <= #1 t_best[2];
  always @(posedge clk)
    if (reset) t_best_d1[3] <= #1 1'h1;
    else t_best_d1[3] <= #1 t_best[3];
  always @(posedge clk)
    if (reset) t_best_d1[4] <= #1 1'h1;
    else t_best_d1[4] <= #1 t_best[4];
  always @(posedge clk)
    if (reset) t_best_d1[5] <= #1 1'h1;
    else t_best_d1[5] <= #1 t_best[5];
  always @(posedge clk)
    if (reset) t_best_d1[6] <= #1 1'h1;
    else t_best_d1[6] <= #1 t_best[6];
  always @(posedge clk)
    if (reset) t_best_d1[7] <= #1 1'h1;
    else t_best_d1[7] <= #1 t_best[7];
  always @(posedge clk)
    if (reset) n_best_d1[0] <= #1 1'h0;
    else n_best_d1[0] <= #1 n_best[0];
  always @(posedge clk)
    if (reset) n_best_d1[1] <= #1 1'h0;
    else n_best_d1[1] <= #1 n_best[1];
  assign _00_[0] = _08_[0] & _08_[1];
  assign _01_[0] = _00_[0] & _00_[1];
  assign _12_ = _01_[0] & _01_[1];
  assign _04_ = _10_ | _12_;
  assign _02_ = n[0] | n[1];
  assign _03_ = ~_02_;
  assign _05_ = _03_ | _04_;
  assign t_best[0] = _05_ ? t_best_d1[0] : t[0];
  assign t_best[1] = _05_ ? t_best_d1[1] : t[1];
  assign t_best[2] = _05_ ? t_best_d1[2] : t[2];
  assign t_best[3] = _05_ ? t_best_d1[3] : t[3];
  assign t_best[4] = _05_ ? t_best_d1[4] : t[4];
  assign t_best[5] = _05_ ? t_best_d1[5] : t[5];
  assign t_best[6] = _05_ ? t_best_d1[6] : t[6];
  assign t_best[7] = _05_ ? t_best_d1[7] : t[7];
  assign n_best[0] = _05_ ? n_best_d1[0] : n[0];
  assign n_best[1] = _05_ ? n_best_d1[1] : n[1];
  assign _10_ = ~_13_;
  assign _11_ = ~_07_[7];
  assign _06_[0] = ~t_best_d1[0];
  assign _06_[1] = ~t_best_d1[1];
  assign _06_[2] = ~t_best_d1[2];
  assign _06_[3] = ~t_best_d1[3];
  assign _06_[4] = ~t_best_d1[4];
  assign _06_[5] = ~t_best_d1[5];
  assign _06_[6] = ~t_best_d1[6];
  assign _06_[7] = ~t_best_d1[7];
  assign _13_ = _11_ | _12_;
  assign _08_[0] = t[0] ^ _06_[0];
  assign _08_[1] = t[1] ^ _06_[1];
  assign _08_[2] = t[2] ^ _06_[2];
  assign _08_[3] = t[3] ^ _06_[3];
  assign _08_[4] = t[4] ^ _06_[4];
  assign _08_[5] = t[5] ^ _06_[5];
  assign _08_[6] = t[6] ^ _06_[6];
  assign _08_[7] = t[7] ^ _06_[7];
  assign _09_[0] = t[0] & _06_[0];
  assign _09_[1] = t[1] & _06_[1];
  assign _09_[2] = t[2] & _06_[2];
  assign _09_[3] = t[3] & _06_[3];
  assign _09_[4] = t[4] & _06_[4];
  assign _09_[5] = t[5] & _06_[5];
  assign _09_[6] = t[6] & _06_[6];
  assign _09_[7] = t[7] & _06_[7];
  assign _14_ = _08_[1] & _07_[0];
  assign _15_ = _08_[3] & _09_[2];
  assign _16_ = _08_[5] & _09_[4];
  assign _17_ = _08_[7] & _09_[6];
  assign _18_ = _00_[1] & _07_[1];
  assign _19_ = _00_[3] & _22_;
  assign _20_ = _01_[1] & _07_[3];
  assign _00_[1] = _08_[3] & _08_[2];
  assign _00_[2] = _08_[5] & _08_[4];
  assign _00_[3] = _08_[7] & _08_[6];
  assign _01_[1] = _00_[3] & _00_[2];
  assign _07_[0] = _09_[0] | _08_[0];
  assign _07_[1] = _09_[1] | _14_;
  assign _21_ = _09_[3] | _15_;
  assign _22_ = _09_[5] | _16_;
  assign _23_ = _09_[7] | _17_;
  assign _07_[3] = _21_ | _18_;
  assign _24_ = _23_ | _19_;
  assign _07_[7] = _24_ | _20_;
endmodule
